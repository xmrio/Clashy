sudo: required

language: node_js
node_js: "8.16.0"

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
    - $HOME/.npm/_prebuilds

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - YARN_GPG=no

jobs:
  include:
    - stage: Build for Mac
      os: osx
      osx_image: xcode10.1
      before_script:
        - if [ "$TRAVIS_OS_NAME" = osx ]; then chmod +x add-osx-cert.sh; fi
        - if [ "$TRAVIS_OS_NAME" = osx ]; then ./add-osx-cert.sh; fi
        - node pre-build.js
      script:
        - yarn run dist
        - yarn run publish always
      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine
    - stage: Build for Windows
      os: windows
      language: node_js
      before_script:
        - node pre-build.js
      script:
        - yarn run dist
        - yarn run publish onTagOrDraft
    - stage: Build for linux
      os: linux
      dist: bionic
      before_install:
        - sudo apt-get install -y ccrypt
        - sudo apt-get install -y sharutils
        - echo CERTIFICATE_OSX_P12 = $CERTIFICATE_OSX_P12 > p12.txt
        - echo CERTIFICATE_PASSWORD = $CERTIFICATE_PASSWORD > pwd.txt
        - ccencrypt p12.txt -K $RET_KEY
        - ccencrypt pwd.txt -K $RET_KEY
        - uuencode -m p12.txt.cpt p12.txt.cpt
        - echo '-------------'
        - uuencode -m pwd.txt.cpt pwd.txt.cpt
      before_script:
        - node pre-build.js
      script:
        - yarn run dist
        - yarn run publish onTagOrDraft
